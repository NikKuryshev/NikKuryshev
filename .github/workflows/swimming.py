import requests
import json
import asyncio
import os
from telegram import Bot
from telegram.error import TelegramError

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
filename = 'last_week_results.json'
access_token = os.environ['ACCESS_TOKEN']  # –¢–µ–ø–µ—Ä—å —Ç–æ–∫–µ–Ω –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
club_id = '1426803'
headers = {'Authorization': f'Bearer {access_token}'}
telegram_bot_token = os.environ['TELEGRAM_BOT_TOKEN']  # –¢–æ–∂–µ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
chat_id = 50820587

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –ø—Ä–æ—à–ª–æ–π –Ω–µ–¥–µ–ª–∏
try:
    with open(filename, 'r') as f:
        past_week_activities = json.load(f)
except FileNotFoundError:
    past_week_activities = []

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ –∏–∑ Strava API (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
response = requests.get(f'https://www.strava.com/api/v3/clubs/{club_id}/activities', headers=headers)

if response.status_code == 200:
    api_response = response.json()
    print("‚úÖ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω—ã, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:", len(api_response))
else:
    print(f"‚ùå –°—Ç—Ä–∞–≤–∞ API –æ—à–∏–±–∫–∞: {response.status_code}")
    api_response = []

def calculate_distances(activities):
    result = {}
    for act in activities:
        athlete_info = act.get("athlete", {})
        athlete_name = athlete_info.get("firstname", "Unknown") + " " + athlete_info.get("lastname", "")
        distance = act.get("distance", 0)
        result[athlete_name] = result.get(athlete_name, 0) + distance
    return result

# –ü–æ–¥—Å—á–µ—Ç –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
last_week_distances = calculate_distances(past_week_activities)
current_week_distances = calculate_distances(api_response)

difference = {}
for athlete in current_week_distances:
    prev_distance = last_week_distances.get(athlete, 0)
    current_distance = current_week_distances[athlete]
    difference[athlete] = current_distance - prev_distance

sorted_difference = sorted(
    [(athlete, diff) for athlete, diff in difference.items() if diff > 0],
    key=lambda x: x[1], reverse=True
)

# –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
message = "üèÜ *–†–µ–π—Ç–∏–Ω–≥ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é* üèÉ‚Äç‚ôÇÔ∏è\n\n"
if sorted_difference:
    for i, (name, diff_distance) in enumerate(sorted_difference, 1):
        message += f"{i}. {name} ‚Äî {diff_distance / 1000:.1f} –∫–º\n"
else:
    message += "–ü—Ä–∏—Ä–æ—Å—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é –Ω–µ—Ç ü§∑‚Äç‚ôÇÔ∏è"

message += "\n–•–æ—Ä–æ—à–µ–π –≤—Å–µ–º –Ω–µ–¥–µ–ª–∏ üö¥‚Äç‚ôÄÔ∏èüèÖ"

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é
with open(filename, 'w') as f:
    json.dump(api_response, f)

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async def send_message_to_telegram(bot_token, chat_id, text, delay_seconds):
    print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ {delay_seconds / 3600:.2f} —á–∞—Å–æ–≤...")
    await asyncio.sleep(delay_seconds)  # –∂–¥—ë–º –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    bot = Bot(token=bot_token)
    try:
        await bot.send_message(chat_id=chat_id, text=text, parse_mode='Markdown')
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –¢–µ–ª–µ–≥—Ä–∞–º!")
    except TelegramError as e:
        print(f"‚ùå Telegram API error: {e}")

# –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
asyncio.run(send_message_to_telegram(telegram_bot_token, chat_id, message, delay_seconds=10))
